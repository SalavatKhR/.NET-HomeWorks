// <auto-generated />
using DbServer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DBServer.Migrations
{
    [DbContext(typeof(MonstersContext))]
    [Migration("20220110075222_MonstersUpdate")]
    partial class MonstersUpdate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DbServer.Data.Monsters", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AC")
                        .HasColumnType("int");

                    b.Property<int>("AttackModifier")
                        .HasColumnType("int");

                    b.Property<int>("AttackPerRound")
                        .HasColumnType("int");

                    b.Property<string>("Damage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DamageModifier")
                        .HasColumnType("int");

                    b.Property<int>("HitPoints")
                        .HasColumnType("int");

                    b.Property<int>("MinACtoAlwaysHit")
                        .HasColumnType("int");

                    b.Property<string>("MonsterName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MonstersData");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AC = 18,
                            AttackModifier = 5,
                            AttackPerRound = 2,
                            Damage = "2d6",
                            DamageModifier = 3,
                            HitPoints = 52,
                            MinACtoAlwaysHit = 6,
                            MonsterName = "Knight"
                        },
                        new
                        {
                            Id = 2,
                            AC = 10,
                            AttackModifier = 2,
                            AttackPerRound = 1,
                            Damage = "2k6",
                            DamageModifier = 0,
                            HitPoints = 24,
                            MinACtoAlwaysHit = 3,
                            MonsterName = "Swarm of rats"
                        },
                        new
                        {
                            Id = 3,
                            AC = 12,
                            AttackModifier = 1,
                            AttackPerRound = 1,
                            Damage = "1d4",
                            DamageModifier = 0,
                            HitPoints = 3,
                            MinACtoAlwaysHit = 2,
                            MonsterName = "Baboon"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
